{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\My PC\\\\Desktop\\\\react projects\\\\udemy react projects\\\\11-class-based-components\\\\src\\\\components\\\\Users.js\";\nimport { Component } from \"react\";\nimport User from \"./User\";\nimport classes from \"./Users.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showUsers: true\n    };\n  }\n  componentDidUpdate() {\n    if (this.props.users.length === 0) {\n      throw new Error('No users provided!');\n    }\n  }\n  toggleUsersHandler() {\n    this.setState(curState => {\n      return {\n        showUsers: !curState.showUsers\n      };\n    });\n  }\n  render() {\n    const usersList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.props.users.map(user => /*#__PURE__*/_jsxDEV(User, {\n        name: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.users,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleUsersHandler.bind(this),\n        children: [this.state.showUsers ? \"Hide\" : \"Show\", \" Users\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), this.state.showUsers && usersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? \"Hide\" : \"Show\"} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;","map":{"version":3,"names":["Component","User","classes","jsxDEV","_jsxDEV","Users","constructor","state","showUsers","componentDidUpdate","props","users","length","Error","toggleUsersHandler","setState","curState","render","usersList","children","map","user","name","id","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","bind"],"sources":["C:/Users/My PC/Desktop/react projects/udemy react projects/11-class-based-components/src/components/Users.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport User from \"./User\";\r\n\r\nimport classes from \"./Users.module.css\";\r\n\r\nclass Users extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      showUsers: true,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.users.length === 0){\r\n      throw new Error('No users provided!');\r\n    }\r\n  }\r\n\r\n  toggleUsersHandler() {\r\n    this.setState((curState) => {\r\n      return { showUsers: !curState.showUsers };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const usersList = (\r\n      <ul>\r\n        {this.props.users.map((user) => (\r\n          <User key={user.id} name={user.name} />\r\n        ))}\r\n      </ul>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.users}>\r\n        <button onClick={this.toggleUsersHandler.bind(this)}>\r\n          {this.state.showUsers ? \"Hide\" : \"Show\"} Users\r\n        </button>\r\n        {this.state.showUsers && usersList}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const Users = () => {\r\n//   const [showUsers, setShowUsers] = useState(true);\r\n\r\n//   const toggleUsersHandler = () => {\r\n//     setShowUsers((curState) => !curState);\r\n//   };\r\n\r\n//   const usersList = (\r\n//     <ul>\r\n//       {DUMMY_USERS.map((user) => (\r\n//         <User key={user.id} name={user.name} />\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n\r\n//   return (\r\n//     <div className={classes.users}>\r\n//       <button onClick={toggleUsersHandler}>\r\n//         {showUsers ? \"Hide\" : \"Show\"} Users\r\n//       </button>\r\n//       {showUsers && usersList}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default Users;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,QAAQ;AAEzB,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,KAAK,SAASL,SAAS,CAAC;EAC5BM,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,KAAK,GAAG;MACXC,SAAS,EAAE;IACb,CAAC;EACH;EAEAC,kBAAkBA,CAAA,EAAE;IAClB,IAAG,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAC;MAC/B,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;IACvC;EACF;EAEAC,kBAAkBA,CAAA,EAAG;IACnB,IAAI,CAACC,QAAQ,CAAEC,QAAQ,IAAK;MAC1B,OAAO;QAAER,SAAS,EAAE,CAACQ,QAAQ,CAACR;MAAU,CAAC;IAC3C,CAAC,CAAC;EACJ;EAEAS,MAAMA,CAAA,EAAG;IACP,MAAMC,SAAS,gBACbd,OAAA;MAAAe,QAAA,EACG,IAAI,CAACT,KAAK,CAACC,KAAK,CAACS,GAAG,CAAEC,IAAI,iBACzBjB,OAAA,CAACH,IAAI;QAAeqB,IAAI,EAAED,IAAI,CAACC;MAAK,GAAzBD,IAAI,CAACE,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;IAED,oBACEvB,OAAA;MAAKwB,SAAS,EAAE1B,OAAO,CAACS,KAAM;MAAAQ,QAAA,gBAC5Bf,OAAA;QAAQyB,OAAO,EAAE,IAAI,CAACf,kBAAkB,CAACgB,IAAI,CAAC,IAAI,CAAE;QAAAX,QAAA,GACjD,IAAI,CAACZ,KAAK,CAACC,SAAS,GAAG,MAAM,GAAG,MAAM,EAAC,QAC1C;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR,IAAI,CAACpB,KAAK,CAACC,SAAS,IAAIU,SAAS;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAEV;AACF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAetB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}